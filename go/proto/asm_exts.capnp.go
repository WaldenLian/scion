// Code generated by capnpc-go. DO NOT EDIT.

package proto

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type RoutingPolicyExt struct{ capnp.Struct }

// RoutingPolicyExt_TypeID is the unique identifier for the type RoutingPolicyExt.
const RoutingPolicyExt_TypeID = 0x96c1dab83835e4f9

func NewRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func NewRootRoutingPolicyExt(s *capnp.Segment) (RoutingPolicyExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return RoutingPolicyExt{st}, err
}

func ReadRootRoutingPolicyExt(msg *capnp.Message) (RoutingPolicyExt, error) {
	root, err := msg.RootPtr()
	return RoutingPolicyExt{root.Struct()}, err
}

func (s RoutingPolicyExt) String() string {
	str, _ := text.Marshal(0x96c1dab83835e4f9, s.Struct)
	return str
}

func (s RoutingPolicyExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s RoutingPolicyExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RoutingPolicyExt) PolType() uint8 {
	return s.Struct.Uint8(1)
}

func (s RoutingPolicyExt) SetPolType(v uint8) {
	s.Struct.SetUint8(1, v)
}

func (s RoutingPolicyExt) IfID() uint64 {
	return s.Struct.Uint64(8)
}

func (s RoutingPolicyExt) SetIfID(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s RoutingPolicyExt) Isdases() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s RoutingPolicyExt) HasIsdases() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RoutingPolicyExt) SetIsdases(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewIsdases sets the isdases field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s RoutingPolicyExt) NewIsdases(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// RoutingPolicyExt_List is a list of RoutingPolicyExt.
type RoutingPolicyExt_List struct{ capnp.List }

// NewRoutingPolicyExt creates a new list of RoutingPolicyExt.
func NewRoutingPolicyExt_List(s *capnp.Segment, sz int32) (RoutingPolicyExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return RoutingPolicyExt_List{l}, err
}

func (s RoutingPolicyExt_List) At(i int) RoutingPolicyExt { return RoutingPolicyExt{s.List.Struct(i)} }

func (s RoutingPolicyExt_List) Set(i int, v RoutingPolicyExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RoutingPolicyExt_List) String() string {
	str, _ := text.MarshalList(0x96c1dab83835e4f9, s.List)
	return str
}

// RoutingPolicyExt_Promise is a wrapper for a RoutingPolicyExt promised by a client call.
type RoutingPolicyExt_Promise struct{ *capnp.Pipeline }

func (p RoutingPolicyExt_Promise) Struct() (RoutingPolicyExt, error) {
	s, err := p.Pipeline.Struct()
	return RoutingPolicyExt{s}, err
}

type ISDAnnouncementExt struct{ capnp.Struct }

// ISDAnnouncementExt_TypeID is the unique identifier for the type ISDAnnouncementExt.
const ISDAnnouncementExt_TypeID = 0xc586650e812cc6a1

func NewISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func NewRootISDAnnouncementExt(s *capnp.Segment) (ISDAnnouncementExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return ISDAnnouncementExt{st}, err
}

func ReadRootISDAnnouncementExt(msg *capnp.Message) (ISDAnnouncementExt, error) {
	root, err := msg.RootPtr()
	return ISDAnnouncementExt{root.Struct()}, err
}

func (s ISDAnnouncementExt) String() string {
	str, _ := text.Marshal(0xc586650e812cc6a1, s.Struct)
	return str
}

func (s ISDAnnouncementExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s ISDAnnouncementExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

// ISDAnnouncementExt_List is a list of ISDAnnouncementExt.
type ISDAnnouncementExt_List struct{ capnp.List }

// NewISDAnnouncementExt creates a new list of ISDAnnouncementExt.
func NewISDAnnouncementExt_List(s *capnp.Segment, sz int32) (ISDAnnouncementExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return ISDAnnouncementExt_List{l}, err
}

func (s ISDAnnouncementExt_List) At(i int) ISDAnnouncementExt {
	return ISDAnnouncementExt{s.List.Struct(i)}
}

func (s ISDAnnouncementExt_List) Set(i int, v ISDAnnouncementExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s ISDAnnouncementExt_List) String() string {
	str, _ := text.MarshalList(0xc586650e812cc6a1, s.List)
	return str
}

// ISDAnnouncementExt_Promise is a wrapper for a ISDAnnouncementExt promised by a client call.
type ISDAnnouncementExt_Promise struct{ *capnp.Pipeline }

func (p ISDAnnouncementExt_Promise) Struct() (ISDAnnouncementExt, error) {
	s, err := p.Pipeline.Struct()
	return ISDAnnouncementExt{s}, err
}

type WatchDogMetricExt struct{ capnp.Struct }

// WatchDogMetricExt_TypeID is the unique identifier for the type WatchDogMetricExt.
const WatchDogMetricExt_TypeID = 0xec40e340d3b20459

func NewWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return WatchDogMetricExt{st}, err
}

func NewRootWatchDogMetricExt(s *capnp.Segment) (WatchDogMetricExt, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return WatchDogMetricExt{st}, err
}

func ReadRootWatchDogMetricExt(msg *capnp.Message) (WatchDogMetricExt, error) {
	root, err := msg.RootPtr()
	return WatchDogMetricExt{root.Struct()}, err
}

func (s WatchDogMetricExt) String() string {
	str, _ := text.Marshal(0xec40e340d3b20459, s.Struct)
	return str
}

func (s WatchDogMetricExt) Set() bool {
	return s.Struct.Bit(0)
}

func (s WatchDogMetricExt) SetSet(v bool) {
	s.Struct.SetBit(0, v)
}

func (s WatchDogMetricExt) Val() uint32 {
	return s.Struct.Uint32(4)
}

func (s WatchDogMetricExt) SetVal(v uint32) {
	s.Struct.SetUint32(4, v)
}

// WatchDogMetricExt_List is a list of WatchDogMetricExt.
type WatchDogMetricExt_List struct{ capnp.List }

// NewWatchDogMetricExt creates a new list of WatchDogMetricExt.
func NewWatchDogMetricExt_List(s *capnp.Segment, sz int32) (WatchDogMetricExt_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return WatchDogMetricExt_List{l}, err
}

func (s WatchDogMetricExt_List) At(i int) WatchDogMetricExt {
	return WatchDogMetricExt{s.List.Struct(i)}
}

func (s WatchDogMetricExt_List) Set(i int, v WatchDogMetricExt) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s WatchDogMetricExt_List) String() string {
	str, _ := text.MarshalList(0xec40e340d3b20459, s.List)
	return str
}

// WatchDogMetricExt_Promise is a wrapper for a WatchDogMetricExt promised by a client call.
type WatchDogMetricExt_Promise struct{ *capnp.Pipeline }

func (p WatchDogMetricExt_Promise) Struct() (WatchDogMetricExt, error) {
	s, err := p.Pipeline.Struct()
	return WatchDogMetricExt{s}, err
}

const schema_e6c88f91b6a1209e = "x\xdal\x90?\xeb\xd3P\x18\x85\xcf\xb97m\xf2\x13" +
	"m\x1b\x9b\x0f \xe2\xa0\xa2bQA\\\xac\xd2\x0e\x1d" +
	"\x84^\x15\xa4 hH\xafm \xff0\xb7\xdaNE" +
	"PW\xe9\xa0\xa3\xd0\xc5\x0f\xe0 \xae\x0e\x8a\xbb\x9b\xab" +
	"\xa2\x8b_\xc0)r;T\x8b]\x0f\xcf{\xde\x87\xd3" +
	"z\xd3\x15\x9dZ\x93\x80:\\\xabW\xbf\xbf_\xba\xfc" +
	"\xfe\xeb\x87WPM\x8a\xea\xf5\xb1\xf5\xbb\xd5\x8b\xcf?" +
	"P\xa3\x0btRA\x7f\xe1\x02\xfe\xec'X\xad?\x9d" +
	"y\xd2\xd0\xcf?Z\x94\x7fQ\xc7\x05.\x8cx\x94\xed" +
	"\xd8\x1e\xb55\xaf\x82\xd5\xc8y\xfb\xa5\xfb\xad\xfbk\x1f" +
	"\xfc\x8c\x87\xd8~\xb9\x81W|\x0cVa\x99\xde\xd3s" +
	"S\xcasQXd\xc5\x95\x9b\xf9\xcc\xc4\xd9d\x98'" +
	"q\xb4\xe8\xcf\x0d\x86\xa4jI\x07p\x08\xf8\xe1q@" +
	"\xdd\x95TSA\x9f\x0chC}\x1dP\xf7%U\"" +
	"\xe8\x0b\x06\x14\x80\x1f\x9f\x06\xd4XR\x15\x82\x94\x01%" +
	"\xe0\xa7\x16\x9cJ\xaa\xa7\x82n\xa9\x0d\x09A\x82\xcb\"" +
	"On/\x0a\xcd:\x04\xeb`3~0\xe8\xf1\x00\x82" +
	"\x07\xe02.\xc7a\xa9K6\xc0\xa1\xe4&n\xec1" +
	"\x1f\xdc\xea]\xcb\xb2|\x96E:\xd5\x99\xe9\xcfi\xac" +
	"\xbb\xb3u?b\xdd=I\x15\xec~\xff\xaf\xe9Nh" +
	"\xa2i/\x9f\xdc\xd0\xe6a\x1c\xd9\x116+x\xdb\xa6" +
	"S\xb6\xe9\x84\xa4:\xff\xcf\x0agmxRR]\xdc" +
	"\xadw\x1f\x85\x09=\x08z\xe0\x9f\x00\x00\x00\xff\xffW" +
	"\xb6r$"

func init() {
	schemas.Register(schema_e6c88f91b6a1209e,
		0x96c1dab83835e4f9,
		0xc586650e812cc6a1,
		0xec40e340d3b20459)
}
